name: Build Android APK And Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install Vite
        run: npm install vite

      - name: Install Yarn
        run: npm install -g yarn

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        id: cache-yarn
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        if: steps.cache-yarn.outputs.cache-hit != 'true'

      - name: Build Source
        run: yarn build

      - name: Set Version
        run: yarn run version

      - name: Sync Capacitor
        run: npx cap sync android

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: cd android && chmod +x ./gradlew

      - name: Build APK
        run: cd android && ./gradlew assembleRelease

      - name: Check APK existence
        run: ls -la android/app/build/outputs/apk/release/

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/SpendWise-*.apk

      - name: Get version from package.json
        id: get_version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Get previous tag
        id: previous_tag
        run: echo "PREVIOUS_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo HEAD^)" >> $GITHUB_OUTPUT
      
      - name: Generate changelog
        id: changelog
        run: |
          CHANGELOG=$(git log --pretty=format:"- %s" ${{ steps.previous_tag.outputs.PREVIOUS_TAG }}..HEAD)
          COMPARE_URL="https://github.com/${{ github.repository }}/compare/${{ steps.previous_tag.outputs.PREVIOUS_TAG }}...main"
          
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "See full changes: $COMPARE_URL" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          tag_name: 'v${{ steps.get_version.outputs.VERSION }}'
          name: 'SpendWise v${{ steps.get_version.outputs.VERSION }}'
          body: |
            Change log:
            ${{ steps.changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: false
          files: android/app/build/outputs/apk/release/SpendWise-*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
